#!/usr/bin/env bash

export LIBVA_DRIVER_NAME=radeonsi
RESOLUTION_W=1366
RESOLUTION_H=768
FPS=${FPS:-60}
FN=~/Videos/recording-$(date +"%d-%m-%Y-%H-%M")
FILENAME=${1:-$FN}
DEVICE=/dev/dri/card0
VAAPI_DEVICE=/dev/dri/renderD128
THREAD_QUEUE_SIZE=140048
# You can list your audio devices by using the 'pactl list' command.
AUDIO_DEVICES=("oss_output.dsp6.monitor")

# Stop recording if the provided argument is equals to 'stop'.
if [ "$1" == "stop" ]; then
	killall ffmpeg
	echo "> Recording stopped."
	exit
fi

if [ "$1" == "cap" ]; then
    doas setcap cap_sys_admin+ep /usr/bin/ffmpeg
    echo "> Uncapped. Now you can record normally!"
    exit
fi

echo "> Starting video recording in $FPS FPS => $FILENAME"

# Record the screen
ffmpeg -vaapi_device $VAAPI_DEVICE -device $DEVICE -framerate $FPS -thread_queue_size $THREAD_QUEUE_SIZE -f kmsgrab -i - -vf hwmap=derive_device=vaapi,crop=$RESOLUTION_W:$RESOLUTION_H:0:$RESOLUTION_H,scale_vaapi=w=$RESOLUTION_W:h=$RESOLUTION_H:format=nv12 -c:v hevc_vaapi -qp:v 0 $FILENAME.mp4

# Record audio devices
for index in "${!AUDIO_DEVICES[@]}"; do 
    device=${AUDIO_DEVICES[$index]}
    ffmpeg -thread_queue_size $THREAD_QUEUE_SIZE -f pulse -ac 2 -i $device $FILENAME-audio-$index.opus
done

echo "> The recording started. To stop, use '$0 stop'."
