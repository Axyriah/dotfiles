(defwidget status-bar []
  (box :class "status-bar-widget" :orientation "h"
    (status-bar-left)
    (box :orientation "h" :space-evenly false :spacing 5 :halign "end"
      (status-bar-right)
      (box :orientation "h" :space-evenly false (quit)))))

(defwidget status-bar-left []
  (box :valign "start" :orientation "h" :space-evenly false :spacing 8 
    (workspaces)
    (current-song)))

(defwidget status-bar-right []
  (box :halign "end" :orientation "h" :class "sb-end" :space-evenly false :spacing 8
    (box :orientation "h" :space-evenly false (audio-volume))
    (box :orientation "h" :space-evenly false (date-time))
    (box :orientation "h" :space-evenly false (clock))))

(defpoll player-metadata :interval "1s" :initial "No players found" `~/.config/eww/scripts/get-current-audio`)
(deflisten current-pause-state :initial "No players found" "playerctl status -F")
(defwidget current-song []
  (box :orientation "h" :space-evenly false :class "current-song-widget"
    (eventbox :onclick "playerctl play-pause"
      (box :space-evenly false :orientation "h" :halign "start" :space-evenly false (label :class "sb-icon" :text {current-pause-state == "Paused" || player-metadata == "No players found" ? "" : "" })))
    (box :space-evenly false :orientation "h" :halign "end" :space-evenly false (label :text {player-metadata != "No players found" ? player-metadata : "Paused"}))))
      
(defpoll day :interval "30s" :initial "00:00" `date '+%a %b/%d'`)
(defpoll clock :interval "30s" :initial "00:00" `date '+%H:%M'`)
(defwidget date-time []
  (box :space-evenly false :orientation "h" :class "sb-2-wrapper date-time-widget" :space-evenly false
    (box :space-evenly false :orientation "h" :class "sb-2-left" :space-evenly false (label :text ""))
    (box :space-evenly false :orientation "h" :class "sb-2-right" :space-evenly false (label :text "${day}"))))
(defwidget clock []
  (eventbox :onclick "eww open --toggle control-center-background-input && eww open --toggle control-center"
    (box :space-evenly false :orientation "h" :class "sb-2-wrapper clock-widget" :space-evenly false
      (box :space-evenly false :orientation "h" :class "sb-2-left" :space-evenly false (label :text ""))
      (box :space-evenly false :orientation "h" :class "sb-2-right" :space-evenly false :spacing 8
        (label :text "${clock}")
        (label :class "sb-icon" :text "")))))
(defwidget audio-volume []
  (box :space-evenly false :orientation "h" :class "sb-2-wrapper audio-volume-widget" :space-evenly false
    (box :space-evenly false :orientation "h" :class "sb-2-left" :space-evenly false (label :text ""))
    (box :space-evenly false :orientation "h" :class "sb-2-right" :space-evenly false (label :text "${current-sink-volume}%"))))

(defwidget quit []
  (eventbox :onclick "hyprctl dispatch exit x"
    (box :space-evenly false :orientation "h" :class "quit-widget" :space-evenly false :spacing 8
      (label :class "sb-icon sb-red-text" :text ""))))

(deflisten workspaces :initial "[]" "~/.config/eww/scripts/get-workspaces")
(deflisten current-workspace :initial "1" "~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
  (eventbox :onscroll "~/.config/eww/scripts/switch-workspace {} ${current-workspace}"
            (box :space-evenly false :orientation "h" :class "workspaces-widget" :spacing 10
              (for workspace in workspaces
                (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
                          :class "sb-workspace-entry ${workspace.id == current-workspace ? "current" : ""}"
                          (label :text "${workspace.name}"))))))

(defwindow status-bar
  :monitor 0
  :stacking "fg"
  :exclusive true
  :geometry (geometry :x "0%" :y "0%" :width "100%" :height "30px" :anchor "top center")
  (status-bar))

